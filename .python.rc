#set -x



function __scope__ {

	local _DBG_MSG_=${_DBG_MSG_- }
	local _INF_MSG_=${_INF_MSG_-1}
	
	
	
	PYTHONBASE=$(dirname `readlink -f $BASH_SOURCE`)
	
	
	
	if [ $1 ]
	then
		PYTHONHOME=$1
	else
		PYTHONHOME=$PYTHONBASE/$(ls $PYTHONBASE | grep -e "python-[0-9]\+\.[0-9]\+\.[0-9]\+" | tail -n 1)
	fi
	
	if [ ! -d $PYTHONHOME -o ! -x $PYTHONHOME ]
	then
		echo "error: PYTHONHOME ( $PYTHONHOME ) is invalid !"
		return 1
	fi
	
	PYTHONHOME=$(readlink -f $PYTHONHOME)
	
	
	
	[ $_DBG_MSG_ ] && echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
	[ $_DBG_MSG_ ] && echo "           PATH: $PATH"
	[ $_DBG_MSG_ ] && echo
	
	
	
	LD_LIBRARY_PATH=$PYTHONHOME/lib${LD_LIBRARY_PATH:+:}$LD_LIBRARY_PATH

	PATH=$PYTHONHOME/bin${PATH:+:}$PATH

	
	
	function _gen_bin() {
	
		[ -h $PYTHONBASE/bin/$1 ] && rm $PYTHONBASE/bin/$1
	
		ls $PYTHONHOME/bin/$1* > /dev/null 2>&1
	
		if [ $? -eq 0 ]
		then
			ln -s $PYTHONHOME/bin/$(basename `ls $PYTHONHOME/bin/$1* | head -n 1`) $PYTHONBASE/bin/$1
		fi
	}
	_gen_bin "pip"
	_gen_bin "pydoc"
	_gen_bin "python"
	_gen_bin "pyvenv"



	[ $_INF_MSG_ ] && echo "        PYTHONBASE: $PYTHONBASE"
	[ $_INF_MSG_ ] && echo "        PYTHONHOME: $PYTHONHOME"
	[ $_INF_MSG_ ] && echo "   LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
	[ $_INF_MSG_ ] && echo "              PATH: $PATH"
	[ $_INF_MSG_ ] && echo
	
	export PATH LD_LIBRARY_PATH PYTHONHOME PYTHONBASE
	
	
	
	return 0
}
__scope__ $@




