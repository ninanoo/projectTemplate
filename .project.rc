#set -x



function __scope__ {

	local _DBG_MSG_=${_DBG_MSG_-}
	local _INF_MSG_=${_INF_MSG_-1}
	
	
	
	if [ $1 ]
	then
		if [ ! -r $1 ]
		then
			echo "error: include file ( $1 ) can not read !"
			return 1
		fi
		. $@ ""
	fi
	
	
	
	PROJECTHOME=$(dirname `readlink -f $BASH_SOURCE`)
	
	
	
	MANPATH=`man -w`



	[ $_DBG_MSG_ ] && echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
	[ $_DBG_MSG_ ] && echo "           PATH: $PATH"
	[ $_DBG_MSG_ ] && echo "        MANPATH: $MANPATH"
	[ $_DBG_MSG_ ] && echo
	
	

	local IFS=$'\n'

	local _FILE_
	local _LINE_

	cd $PROJECTHOME

	for _FILE_ in $(
			  ls -1 $(find $PROJECTHOME -regextype posix-egrep -regex ".*/.project.path.lib(.[0-9]+)?") \
			| sed -e 's/\.project\.path\.lib/\*/' \
			| sort -nt '*' -k2 \
			| sed -e 's/\*/.project.path.lib/'
		)
	do
		cd $(dirname $_FILE_)
		
		for _LINE_ in $(cat $_FILE_)
		do
			_LINE_=$(echo $_LINE_ | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

			[ ! $_LINE_ -o $(expr "$_LINE_" : '\(.\).*') = "#" ] && continue

			LD_LIBRARY_PATH=$(readlink -f $_LINE_)${LD_LIBRARY_PATH:+:}$LD_LIBRARY_PATH
		done
	done

	cd $PROJECTHOME

	for _FILE_ in $(
			  ls -1 $(find $PROJECTHOME -regextype posix-egrep -regex ".*/.project.path.bin(.[0-9]+)?") \
			| sed -e 's/\.project\.path\.bin/\*/' \
			| sort -nt '*' -k2 \
			| sed -e 's/\*/.project.path.bin/'
		)
	do
		cd $(dirname $_FILE_)
		
		for _LINE_ in $(cat $_FILE_)
		do
			_LINE_=$(echo $_LINE_ | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

			[ ! $_LINE_ -o $(expr "$_LINE_" : '\(.\).*') = "#" ] && continue

			PATH=$(readlink -f $_LINE_)${PATH:+:}$PATH
		done
	done

	cd $PROJECTHOME

	for _FILE_ in $(
			  ls -1 $(find $PROJECTHOME -regextype posix-egrep -regex ".*/.project.path.man(.[0-9]+)?") \
			| sed -e 's/\.project\.path\.man/\*/' \
			| sort -nt '*' -k2 \
			| sed -e 's/\*/.project.path.man/'
		)
	do
		cd $(dirname $_FILE_)
		
		for _LINE_ in $(cat $_FILE_)
		do
			_LINE_=$(echo $_LINE_ | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

			[ ! $_LINE_ -o $(expr "$_LINE_" : '\(.\).*') = "#" ] && continue

			MANPATH=$(readlink -f $_LINE_)${MANPATH:+:}$MANPATH
		done
	done

	cd $PROJECTHOME



	[ $_DBG_MSG_ ] && echo "    PROJECTHOME: $PROJECTHOME"
	[ $_DBG_MSG_ ] && echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
	[ $_DBG_MSG_ ] && echo "           PATH: $PATH"
	[ $_DBG_MSG_ ] && echo "        MANPATH: $MANPATH"
	[ $_DBG_MSG_ ] && echo
	
	
	
	export MANPATH PATH LD_LIBRARY_PATH PROJECTHOME

	[ $_INF_MSG_ ] && ./project.sh
	


	return 0
}
__scope__ $@




